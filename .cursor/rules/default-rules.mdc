---
alwaysApply: true
---


# 開発設定

開発のために検討した内容はメモとしてmemo.mdに保存するようにしてください。
それは新しく検討する度に確認して、知識を使いまわしてください。保存内容は可能な限り簡潔にまとめてください。
Serial.printlnは不要のため、使用しないでください。


# プロジェクト概要

Nintendo Switchに接続するための独自のコントローラをM5Stack Core2を使って制作します。
このプロジェクトではPlatformIOを使って構成し、ビルドやM5Stackへの書き込みを行います。

# 主な機能（タッチ操作有効時）

## 起動準備

- 起動開始後、まずはSwitchとのペアリングを試みます。
- ペアリング中、LCDには「Now Pairing...」と表示されます。
- ペアリング完了後、「入力待機」状態へ移行します。

## 入力待機

- コントローラとしての入力待機を行っている状態です。
- この状態では「Paired」とLCDに表示し、その下に次のボタン入力の状態を表示します。
- Core2には左、中、右の3つのボタンが存在します。以下にそれらの割り当てを示します。
 - 左ボタン: 左スティックの「右」が入力されます。
 - 中ボタン: 「+」ボタンが入力されます。
 - 右ボタン: 「A」ボタンが入力されます。
- 各ボタン入力がされると、その情報をSwitch本体に送信することで、JoyConの代わりの役割を果たします。
- ペアリングが切断、解除されると再び「起動準備」状態へ移行し、ペアリングを試みます。
- また、webサーバーによってコントローラ入力も待ち受けます。

# 主な機能（タッチ操作無効時）

## 画面表示内容
- 上部にWifi情報を小さく表示
 - 接続成功時は暗い灰色でipアドレスを、失敗時は赤で「No Wifi」と表示
- 中央に大きくwebサーバーで受信しているコントローラ入力内容を表示
 - ボタン入力がある場合、白い塗りつぶし円に黒字の「A」と表示
 - スティック入力がある場合、細く白い円の枠線に「+」カーソルをX, Yの比率に合わせて表示
 - 値がデフォルトの場合（ボタンであればオフ）は表示せず、入力がある間は表示しつづける
 - 複数入力がある場合は、更新のあったもののうち最新のものを１つ表示


# その他制約事項

- 色表示の場合はM5.Lcd.color565関数を使用する
